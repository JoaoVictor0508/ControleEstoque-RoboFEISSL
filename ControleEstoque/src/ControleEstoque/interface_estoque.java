package ControleEstoque;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author robofei
 */
public class interface_estoque extends javax.swing.JFrame {

    /**
     * Creates new form interface_estoque
     */
    public interface_estoque() {
        initComponents();
        fillComboFromTxtFile();
        fillAllComboFilter();
        ColocaQuantidadeItem();
    }

    Estoque estoque = new Estoque();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JRadioButton();
        btnRemover = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        cbxEscolhaComponentes = new javax.swing.JComboBox<>();
        txtCampoNovoComponente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        spinnerQuantidade = new javax.swing.JSpinner();
        btnAdicionarNovoComponente = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtCampoFiltro = new javax.swing.JTextField();
        cbxNomesIntegrantes = new javax.swing.JComboBox<>();
        cbxMotivos = new javax.swing.JComboBox<>();
        btnFiltrar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Componente:");

        buttonGroup1.add(btnAdicionar);
        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnRemover);
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jLabel2.setText("Quantidade:");

        jLabel3.setText("Motivo:");

        jLabel4.setText("Responsável:");

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        cbxEscolhaComponentes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxEscolhaComponentes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxEscolhaComponentesItemStateChanged(evt);
            }
        });

        txtCampoNovoComponente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCampoNovoComponenteActionPerformed(evt);
            }
        });

        jLabel5.setText("Novo componente:");

        spinnerQuantidade.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        btnAdicionarNovoComponente.setText("Adicionar novo componente");
        btnAdicionarNovoComponente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarNovoComponenteActionPerformed(evt);
            }
        });

        jLabel6.setText("Filtro:");

        txtCampoFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCampoFiltroActionPerformed(evt);
            }
        });

        btnFiltrar.setText("Filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        jLabel7.setText("Quantidade:");

        txtQuantidade.setText("-");

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        jLabel8.setText("Controle Estoque Componentes Eletrônicos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(btnOK))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxNomesIntegrantes, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(cbxMotivos, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCampoNovoComponente)
                                        .addComponent(txtCampoFiltro)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cbxEscolhaComponentes, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(spinnerQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(0, 0, Short.MAX_VALUE))))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnAdicionar)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnRemover)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnAdicionarNovoComponente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFiltrar)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQuantidade))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel8)))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel8)
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCampoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltrar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(cbxEscolhaComponentes)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(txtQuantidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCampoNovoComponente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarNovoComponente)
                    .addComponent(btnRemover))
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxMotivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxNomesIntegrantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(221, 221, 221))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarNovoComponenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarNovoComponenteActionPerformed
        String componente = txtCampoNovoComponente.getText();
        int quantidade = (Integer) spinnerQuantidade.getValue();
        Componente novo_componente = new Componente(componente, quantidade);
        String motivo = (String) cbxMotivos.getSelectedItem();
        String responsavel = (String) cbxNomesIntegrantes.getSelectedItem();
        int verifica = verificaCampos_novo_componente();
        
        switch(verifica){
            case 1 -> {
                JOptionPane.showMessageDialog(null,"Selecione uma quantidade!", "Erro ao adicionar", JOptionPane.ERROR_MESSAGE);
            }
            case 2 -> {
                JOptionPane.showMessageDialog(null,"Selecione um responsável!", "Erro ao adicionar", JOptionPane.ERROR_MESSAGE);
            }
            case 3 -> {
                JOptionPane.showMessageDialog(null,"Selecione um motivo!", "Erro ao adicionar", JOptionPane.ERROR_MESSAGE);
            }
            case 4 -> {
                JOptionPane.showMessageDialog(null,"Escreva o nome do componente", "Erro ao adicionar", JOptionPane.ERROR_MESSAGE);
            }
            case 0 ->{
                estoque.AdicionarComponente(novo_componente, quantidade, motivo, responsavel);
                estoque.AdicionaLinhaCSVHistorico(2, novo_componente.getNome(), novo_componente.getQuantidade(), responsavel, motivo);
                JOptionPane.showMessageDialog(null,quantidade+" itens do componente "+componente+" foram adicionados por "+responsavel, "Componente adicionado", JOptionPane.INFORMATION_MESSAGE);
                resetValores();
                fillAllComboFilter();
            }
        } 
    }//GEN-LAST:event_btnAdicionarNovoComponenteActionPerformed

    private void txtCampoNovoComponenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCampoNovoComponenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCampoNovoComponenteActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        txtCampoNovoComponente.setEditable(true);
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void txtCampoFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCampoFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCampoFiltroActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        txtCampoNovoComponente.setEditable(false);
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        String componente = (String) cbxEscolhaComponentes.getSelectedItem();
        int quantidade = (Integer) spinnerQuantidade.getValue();
        String motivo = (String) cbxMotivos.getSelectedItem();
        String responsavel = (String) cbxNomesIntegrantes.getSelectedItem();
        int verifica = verificaCampos();
        
        switch(verifica){
            case 1 -> {
                JOptionPane.showMessageDialog(null,"Selecione uma quantidade!", "Erro ao adicionar", JOptionPane.ERROR_MESSAGE);
            }
            case 2 -> {
                JOptionPane.showMessageDialog(null,"Selecione um responsável!", "Erro ao adicionar", JOptionPane.ERROR_MESSAGE);
            }
            case 3 -> {
                JOptionPane.showMessageDialog(null,"Selecione um motivo!", "Erro ao adicionar", JOptionPane.ERROR_MESSAGE);
            }
            case 0 ->{
                if(btnAdicionar.isSelected())
                {
                    estoque.EditarComponente(componente, quantidade, motivo, responsavel, 1);
                    estoque.AdicionaLinhaCSVHistorico(1, componente, quantidade, responsavel, motivo);
                    JOptionPane.showMessageDialog(null,quantidade+" itens do componente "+componente+" foram adicionados por "+responsavel, "Componente adicionado", JOptionPane.INFORMATION_MESSAGE);
                    resetValores();
                }
                else if (btnRemover.isSelected())
                {
                    int verifica_estoque = estoque.EditarComponente(componente, quantidade, motivo, responsavel, 0);
                    if(verifica_estoque == 0)
                    {
                        JOptionPane.showMessageDialog(null,"Quantidade insuficiente para retirada", "Erro ao retirar", JOptionPane.ERROR_MESSAGE);
                    }
                    else if(verifica_estoque == 1)
                    {
                        estoque.AdicionaLinhaCSVHistorico(0, componente, quantidade, responsavel, motivo);
                        JOptionPane.showMessageDialog(null,quantidade+" itens do componente "+componente+" foram removidos por "+responsavel, "Componente adicionado", JOptionPane.INFORMATION_MESSAGE);
                        resetValores();
                    }
                }
            }
        }      
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        String filtro = txtCampoFiltro.getText();
        fillComboFilter(filtro);
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void cbxEscolhaComponentesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxEscolhaComponentesItemStateChanged
        ColocaQuantidadeItem();
    }//GEN-LAST:event_cbxEscolhaComponentesItemStateChanged

    public void resetValores(){
        txtCampoFiltro.setText("");
        cbxEscolhaComponentes.setSelectedIndex(0);
        txtCampoNovoComponente.setText("");
        buttonGroup1.clearSelection();
        spinnerQuantidade.setValue(0);
        cbxMotivos.setSelectedIndex(0);
        cbxNomesIntegrantes.setSelectedIndex(0);
    }
    
    public void ColocaQuantidadeItem(){
        final String caminho = System.getProperty("user.dir") + "/";
        File arquivo_1 = new File(caminho + "/Estoque.csv");
        try
        {
            Scanner arquivo_lido = new Scanner(arquivo_1);
            arquivo_lido.useDelimiter("[,\n]");
            
            while(arquivo_lido.hasNext())
            {
                String nome_componente = arquivo_lido.next();
                String quantidade_componente = arquivo_lido.next();
                if(nome_componente.equals(cbxEscolhaComponentes.getSelectedItem()))
                {  
                    txtQuantidade.setText(quantidade_componente);
                }
            }
            
            arquivo_lido.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(interface_estoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public int verificaCampos(){
        if((Integer) spinnerQuantidade.getValue() == 0){
            return 1;
        }
        else if(cbxNomesIntegrantes.getSelectedItem().equals("Responsável"))
        {
            return 2;
        }
        else if(cbxMotivos.getSelectedItem().equals("Motivos"))
        {
            return 3;
        }
        return 0;
    }
    
    public int verificaCampos_novo_componente(){
        if((Integer) spinnerQuantidade.getValue() == 0){
            return 1;
        }
        else if(cbxNomesIntegrantes.getSelectedItem().equals("Responsável"))
        {
            return 2;
        }
        else if(cbxMotivos.getSelectedItem().equals("Motivos"))
        {
            return 3;
        }
        else if(txtCampoNovoComponente.getText().isBlank())
        {
            return 4;
        }
        return 0;
    }
    
    public void fillComboFromTxtFile(){
        final String caminho = System.getProperty("user.dir") + "/";
        File arquivo_1 = new File(caminho + "/Nomes_Integrantes.txt");
        File arquivo_2 = new File(caminho + "/Motivos.txt");
        
        try {
            BufferedReader br_1 = new BufferedReader(new FileReader(arquivo_1));
            Object[] lines_1 = br_1.lines().toArray();
            
            for (Object line1 : lines_1) {
                String line = line1.toString();
                cbxNomesIntegrantes.addItem(line);
            }
            
            BufferedReader br_2 = new BufferedReader(new FileReader(arquivo_2));
            Object[] lines_2 = br_2.lines().toArray();
            
            for (Object line2 : lines_2) {
                String line = line2.toString();
                cbxMotivos.addItem(line);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(interface_estoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void fillComboFilter(String filtro){
        filtro = filtro.toLowerCase();
        final String caminho = System.getProperty("user.dir") + "/";
        File arquivo_1 = new File(caminho + "/Estoque.csv");
        ArrayList<String> componentes_filtrados = new ArrayList<>();
        try {
            Scanner arquivo_lido = new Scanner(arquivo_1);
            arquivo_lido.useDelimiter("[,\n]");
            
            while(arquivo_lido.hasNext()){
                String nome_componente_normal = arquivo_lido.next();
                String nome_componente = nome_componente_normal.toLowerCase();
                int quantidade_componente = Integer.parseInt(arquivo_lido.next());
                if(nome_componente.contains(filtro))
                {  
                    componentes_filtrados.add(nome_componente_normal);
                }
            }
            if(componentes_filtrados.isEmpty())
            {
                fillAllComboFilter();
                JOptionPane.showMessageDialog(null,"Componente não encontrado", "Erro ao filtrar", JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                arquivo_lido.close();
                cbxEscolhaComponentes.removeAllItems();
                for (String itens : componentes_filtrados)
                {
                    cbxEscolhaComponentes.addItem(itens);
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(interface_estoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void fillAllComboFilter(){
        final String caminho = System.getProperty("user.dir") + "/";
        File arquivo_1 = new File(caminho + "/Estoque.csv");
        ArrayList<String> componentes_combobox = new ArrayList<>();
        try {
            Scanner arquivo_lido = new Scanner(arquivo_1);
            arquivo_lido.useDelimiter("[,\n]");
            
            while(arquivo_lido.hasNext()){
                String nome_componente = arquivo_lido.next();
                int quantidade_componente = Integer.parseInt(arquivo_lido.next());
                componentes_combobox.add(nome_componente);
            }
            arquivo_lido.close();
            cbxEscolhaComponentes.removeAllItems();
            for (String itens : componentes_combobox)
            {
                cbxEscolhaComponentes.addItem(itens);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(interface_estoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interface_estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interface_estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interface_estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interface_estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interface_estoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnAdicionar;
    private javax.swing.JButton btnAdicionarNovoComponente;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnOK;
    private javax.swing.JRadioButton btnRemover;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxEscolhaComponentes;
    private javax.swing.JComboBox<String> cbxMotivos;
    private javax.swing.JComboBox<String> cbxNomesIntegrantes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner spinnerQuantidade;
    private javax.swing.JTextField txtCampoFiltro;
    private javax.swing.JTextField txtCampoNovoComponente;
    private javax.swing.JLabel txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
